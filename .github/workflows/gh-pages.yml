name: Deploy Hugo site to Github Pages

on:
  push:
    branches:
      - master
    paths-ignore:
      - "LICENSE"
      - "README.md"

  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Default to bash
defaults:
  run:
    shell: bash

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Ensure that only a single job or workflow using the same concurrency group will run at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  BASE_URL: https://iharshad.github.io

jobs:
  build-deploy:
    runs-on: ubuntu-22.04
    outputs:
      date_info: ${{ steps.step4.outputs.date_info }}
      branch_info: ${{ steps.step4.outputs.branch_info }}
      commit_info: ${{ steps.step4.outputs.commit_info }}
      author_info: ${{ steps.step4.outputs.author_info }}
      message_info: ${{ steps.step4.outputs.message_info }}
    steps:
      - name: Checkout code
        id: step1
        uses: actions/checkout@v3.3.0
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo binaries
        id: step2
        uses: peaceiris/actions-hugo@v2.6.0
        with:
          hugo-version: '0.97.0'
          extended: true

      # - name: Update domain name in config file
      #   uses: jacobtomlinson/gha-find-replace@v2
      #   with:
      #     find: 'baseURL: "/"'
      #     replace: 'baseURL: "https://iharshad.github.io"'
      #     include: 'config.yaml' # Will match config.yaml file only

      - name: Build static site
        id: step3
        run: |
          hugo \
            --baseURL $BASE_URL \
            --cleanDestinationDir \
            --destination="dist" \
            --enableGitInfo=true \
            --templateMetrics \
            --templateMetricsHints \
            --minify \
            --gc

      - name: Get VCS info
        id: step4
        run: |
          # website_info=`git log --max-count=1 --pretty=format:" Branch: %d%x0A Commit: %H%x0A Author: %an <%ae>%x0A Date: %ad%x0A Message: %s%x0A"`
          # echo "website_info=${website_info}" >> $GITHUB_OUTPUT
          date_info=`git log --max-count=1 --pretty=format:"%d"`
          echo "date_info=${date_info}" >> $GITHUB_OUTPUT
          branch_info=`git log --max-count=1 --pretty=format:"%H"`
          echo "branch_info=${branch_info}" >> $GITHUB_OUTPUT
          commit_info=`git log --max-count=1 --pretty=format:"%an <%ae>"`
          echo "commit_info=${commit_info}" >> $GITHUB_OUTPUT
          author_info=`git log --max-count=1 --pretty=format:"%ad"`
          echo "author_info=${author_info}" >> $GITHUB_OUTPUT
          message_info=`git log --max-count=1 --pretty=format:"%s"`
          echo "message_info=${message_info}" >> $GITHUB_OUTPUT

      # - name: Save commit to file
      #   id: step5

        # run: |
        #   echo $env:WEBSITE_MESSAGE_INFO
        #   cat <<EOF > ./dist/status.html
        #   abc
        #   $env:WEBSITE_BRANCH_INFO
        #   $env:WEBSITE_COMMIT_INFO
        #   $env:WEBSITE_AUTHOR_INFO
        #   $env:WEBSITE_DATE_INFO
        #   $env:WEBSITE_MESSAGE_INFO
        #   EOF

      - name: Deploy static site
        id: step6
        uses: peaceiris/actions-gh-pages@v3.9.2
        # If you're changing the branch from main,
        # also change the `main` in `refs/heads/main`
        # below accordingly.
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          # cname: mysite.com
          github_token: ${{ secrets.GITHUB_TOKEN }} # token generated by Actions during execution
          # deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          commit_message: ${{ github.event.head_commit.message }}
          publish_branch: gh-pages # set a branch name to use as GitHub Pages branch
          publish_dir: ./dist # a source directory to deploy to GitHub Pages

  job2:
    runs-on: ubuntu-22.04
    needs: build-deploy
    steps:
      - run: |
          echo "${{ needs.build-deploy.outputs.date_info }}"
          echo "${{ needs.build-deploy.outputs.branch_info }}"
          echo "${{ needs.build-deploy.outputs.commit_info }}"
          echo "${{ needs.build-deploy.outputs.author_info }}"
          echo "${{ needs.build-deploy.outputs.message_info }}"
      - name: build json
        run: |
          cat <<EOF > meta.html
          {
            date_info: ${{ needs.build-deploy.outputs.date_info }}
            branch_info: ${{ needs.build-deploy.outputs.branch_info }}
            commit_info: ${{ needs.build-deploy.outputs.commit_info }}
            author_info: ${{ needs.build-deploy.outputs.author_info }}
            message_info: ${{ needs.build-deploy.outputs.message_info }}
          }
          EOF
      - name: check json
        run: |
          ls -alh
          cat meta.html
